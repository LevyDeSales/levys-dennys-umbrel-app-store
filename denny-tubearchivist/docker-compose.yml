services:
  es:
    image: elastic/elasticsearch:8.14.3
    container_name: TubeArchivist-ES
    hostname: tubearchivist-es
    user: 1000:0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    healthcheck:
      test: curl -s http://tubearchivist-es:9200 >/dev/null || exit 1
    environment:
      - TZ=Europe/Bucharest
      - ELASTIC_PASSWORD=tubearchivistpass
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - discovery.type=single-node
      - path.repo=/usr/share/elasticsearch/data/snapshot
    volumes:
      - /volume1/docker/tubearchivist/es:/usr/share/elasticsearch/data:rw
    restart: on-failure:5

  redis:
    image: redis:7
    container_name: TubeArchivist-REDIS
    hostname: tubearchivist-redis
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    user: 1000:1000
    environment:
      - TZ=Europe/Bucharest
    volumes:
      - /volume1/docker/tubearchivist/redis:/data:rw
    restart: on-failure:5
    depends_on:
      es:
        condition: service_started

  tubearchivist:
    image: bbilly1/tubearchivist:latest
    container_name: TubeArchivist
    hostname: tubearchivist
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8000' || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    ports:
      - 8686:8000
    environment:
      - TZ=Europe/Bucharest
      - HOST_UID=1000
      - HOST_GID=1000
      - ES_URL=http://tubearchivist-es:9200
      - TA_USERNAME=admin
      - TA_PASSWORD=umbrel
      - TA_HOST=http://umbrel-2.local:8686
      - REDIS_CON=redis://redis:6379
      - ELASTIC_PASSWORD=tubearchivistpass
    volumes:
      - /volume1/docker/tubearchivist/media:/youtube:rw
      - /volume1/docker/tubearchivist/cache:/cache:rw
    restart: on-failure:5
    depends_on:
      es:
        condition: service_started
      redis:
        condition: service_healthy
